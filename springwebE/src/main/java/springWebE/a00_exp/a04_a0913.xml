<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:util="http://www.springframework.org/schema/util"
	 xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
  		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
   		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd" >

<!--  

#여러가지 구조체를 활용한 컨테이너 설정 처리 
1. list 형식
	앞에서 ArrayList로 작성한 방법 <list> 안에 ref로 입력값 처리

2. set(중복불가) 형식 데이터 할당 처리
	<set>안에 value를 이용해 입력값 처리
	public void setAgent(Set<String> agent) 
	
3. map(key/value) 형식 데이터 할당 객체
	1) property : key/value 형식 collection 
		컨테이너 <props> 안에 <prop key="">value값</prop>
	
	2) map<key, valueObject> : key와 value의 generic 선언으로 된 collection
		컨테이너 <map> 안에 <entry>에 key/value 형식으로 처리 
			-> valueObject에 다양한 유형의 데이터를 넣을 수 있음


-->

	<!--  setSection(Propertise) -->
	<!--  1) list 형식 -->
	<bean id="bus" class="diexp.vo.Bus">
		<property name="busNumber">
			<set>
				<value>3003</value>
				<value>7700</value>
				<value>7650</value>
			</set>
		</property>
		<property name="sescion">
			<props>
				<prop key="서울">서울~수원</prop>
				<prop key="7700">수원~인천</prop>
				<prop key="7650">부평~강남</prop>
			</props>
		</property>
	</bean>
	
	<!-- 5번) Product prod2 = new Product("바나나", 3000, 3); -->
	<bean id="prod2" class="diexp.vo.Product" c:_0="바나나" c:_1="3000" c:_2="3"/>
	<bean id="prod3" class="diexp.vo.Product" p:name="오렌지" p:price="2000" p:cnt="2"/>
	
	<!--  6번) -->
	<bean id="stud01" class="diexp.vo.Student" p:name="홍길동" p:kor="70" p:eng="77" p:math="82"/>
	<bean id="sInfo" class="diexp.vo.OnSchool" c:_0="즐거운학교">
		<property name="studInfo">
			<map>
				<entry key="1" value-ref="stud01"></entry>	
				<entry key="2" value-ref="stud02"></entry>	
				<entry key="3" value-ref="stud03"></entry>	
			</map>
		</property>
	</bean>
	
	
	
</beans>