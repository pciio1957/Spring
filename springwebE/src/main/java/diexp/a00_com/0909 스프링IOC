

#loc
1. Inversion of Control라는 말로 제어의 역전 즉, 인스턴스 생성부터 소멸까지의
	인스턴스 생명주기 관리를 개발자가 아닌 컨테이너가 대신 해준다라는 뜻이다
2. 컨테이너 역할을 해주는 프레임워크에서 제어하는 권한을 넘겨서 개발자가 코드를 신경쓰는 부분을 
	줄이는 전략이다
3. IOC 컨테이너는 객체의 생성을 책임지고 의존서를 관리한다.
4. 스프링은 IOC기반을 메인 컨테이너(dispatcher-servlet.xml)에 의해 설정되어진다.
	1) WAS가 시작되면 IOC기반의 컨테이너 안에 선언된 객체가 생성되어 메모리에 로딩되고
	2) 이 객체들 간에 연관 관계를 setXXX()에 의해 선언되면 자동 할당(autowrite)가 처리된다
	3) MVC의 controller, service, dao는 이러한 컨테이너 기반으로 처리되기에
		따로 new XXX()로 생성자를 호출할 필요가 없어진다.
		
		
#생성자에 의한 객체 생성
	Dept d = new Dept(10, "회계", "서울");
	constructor-arg value="10"
	constructor-arg value="회계"
	constructor-arg value="서울"
